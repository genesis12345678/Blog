spring:
  security:
    oauth2:
      client:
        registration:

          google:
            client-id: ENC(uTmUe3/W8In1+WmDVIAiQ/5+5Y7Oy6pRm43pytRe8p/8TfxHFP53G9EJHr9QXOvXF0nydbr56ahnvg+wShMFOMqSKtcMJ6eUzmrsBZSE9aSTRW7x7BXNnw==)
            client-secret: ENC(vKSRL4Hllw5KpnS5EmrgcRsGweaSIHVwLQUHEceCcq7wFMAW9GIjmKEL9tZ/3YUI)
            scope:
              - openid
              - profile
              - email
          kakao:
            client-id: ENC(n4OSe67MumM65r8zdpky0BlZp3uX9rGq9DRVcW3P1DxGi341wC3bD0vgsikha15g)
            client-secret: ENC(T0Yr9hUwmv8aKLZU5yTbh3GrbA8B99cEkcChZf5EG4cMPEFRiyxdq0C3f/srZ3a4)
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: blog
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - openid
              - profile_nickname
              - account_email
            provider: kakao
          naver:
            client-id: ENC(6bHb92tALlxA2hakSI16YUuUk6YkqVYWCy+I5ZbQH7w=)
            client-secret: ENC(SyBYigPQI1A0WE3owWCjbYoKrufhQxOU)
            client-name: blog
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
            provider: naver

        provider:
          kakao:
            issuer-uri: https://kauth.kakao.com
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            jwk-set-uri: https://kauth.kakao.com/.well-known/jwks.json
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  thymeleaf:
    cache: false

  data:
    redis:
      host: localhost
      port: 6379

  jpa:
    properties:
      hibernate:
        use_sql_comments: true

server:
  servlet:
    session:
      timeout: 1800

jasypt:
  encryptor:
    bean: jasyptEncryptor
    password: ${ENCRYPT_KEY}

logging:
  level:
    sql: debug
    orm:
      jdbc:
        bind: trace
---

spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://localhost:3306/blog
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        format_sql: true
        hbm2ddl:
          auto: none
        dialect: org.hibernate.dialect.MySQLDialect

---

spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa

  h2:
    console:
      enabled: true

  jpa:
    defer-datasource-initialization: true # 테이블 생성 후 sql 파일 실행
    show-sql: true
    properties:
      hibernate:
        format_sql: true